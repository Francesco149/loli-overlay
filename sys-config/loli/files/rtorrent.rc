method.insert = cfg.basedir, private|const|string, (cat,"/mnt/bak/rtorrent/")
method.insert = cfg.watch,   private|const|string, (cat,(cfg.basedir),"watch/")
method.insert = cfg.logs,    private|const|string, (cat,(cfg.basedir),"log/")
method.insert = cfg.logfile, private|const|string, (cat,(cfg.logs),"rtorrent-",\
    (system.time),".log")

execute.throw = bash, -c, (cat,\
    "builtin cd \"", (cfg.basedir), "\" ",\
    "&& mkdir -p .session download log watch/{load,start}")

network.port_range.set = 50000-50000
network.port_random.set = no

# conservative settings for 'private' trackers
dht.mode.set = auto
protocol.pex.set = yes
trackers.use_udp.set = yes
dht.port.set = 62882

schedule2 = dht_node_1, 5, 0, "dht.add_node=router.utorrent.com:6881"
schedule2 = dht_node_2, 5, 0, "dht.add_node=dht.transmissionbt.com:6881"
schedule2 = dht_node_3, 5, 0, "dht.add_node=router.bitcomet.com:6881"
schedule2 = dht_node_4, 5, 0, "dht.add_node=dht.aelitis.com:6881"

# max slots (per-torrent and global)
throttle.max_uploads.set = 25
throttle.max_uploads.global.set = 100

throttle.min_peers.normal.set = 99
throttle.max_peers.normal.set = 100
throttle.min_peers.seed.set = -1
throttle.max_peers.seed.set = -1
trackers.numwant.set = 100

protocol.encryption.set = allow_incoming,try_outgoing,enable_retry
# temporary fix for public trackers

network.http.max_open.set = 50
network.max_open_files.set = 600
network.max_open_sockets.set = 300

pieces.memory.max.set = 1800M
network.xmlrpc.size_limit.set = 4M

session.path.set = (cat, (cfg.basedir), ".session/")
directory.default.set = (cat, (cfg.basedir), "download/")
log.execute = (cat, (cfg.logs), "execute.log")
##log.xmlrpc = (cat, (cfg.logs), "xmlrpc.log")
execute.nothrow = bash, -c, (cat, "echo >",\
    (session.path), "rtorrent.pid", " ", (system.pid))

encoding.add = utf8
system.umask.set = 0027
system.cwd.set = (directory.default)
network.http.dns_cache_timeout.set = 25
network.http.capath.set = "/etc/ssl/certs"
network.http.ssl_verify_peer.set = 0
pieces.hash.on_completion.set = no

view.sort_current = seeding, greater=d.ratio=
schedule2 = monitor_diskspace, 15, 60, ((close_low_diskspace, 1000M))

method.insert = system.startup_time, value|const, (system.time)
method.insert = d.data_path, simple,\
    "if=(d.is_multi_file),\
        (cat, (d.directory), /),\
        (cat, (d.directory), /, (d.name))"
method.insert = d.session_file, simple, "cat=(session.path), (d.hash), .torrent"

schedule2 = watch_start, 10, 10,\
    ((load.start, (cat, (cfg.watch), "start/*.torrent")))

schedule2 = watch_load, 11, 10,\
    ((load.normal, (cat, (cfg.watch), "load/*.torrent")))

# logging:
#   levels = critical error warn notice info debug
#   groups = connection_* dht_* peer_* rpc_* storage_* thread_* tracker_*
#            torrent_*
print = (cat, "logging to ", (cfg.logfile))
log.open_file = "log", (cfg.logfile)
log.add_output = "info", "log"
##log.add_output = "tracker_debug", "log"
